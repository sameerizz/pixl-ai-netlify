{
  "version": 3,
  "sources": ["../../../../node_modules/@gradio/client/dist/index.js"],
  "sourcesContent": ["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar fn = new Intl.Collator(0, { numeric: 1 }).compare;\nfunction semiver$1(a, b, bool) {\n  a = a.split(\".\");\n  b = b.split(\".\");\n  return fn(a[0], b[0]) || fn(a[1], b[1]) || (b[2] = b.slice(2).join(\".\"), bool = /[.-]/.test(a[2] = a.slice(2).join(\".\")), bool == /[.-]/.test(b[2]) ? fn(a[2], b[2]) : bool ? -1 : 1);\n}\nconst CONFIG_URL = \"config\";\nconst API_INFO_URL = \"info\";\nconst SPACE_FETCHER_URL = \"https://gradio-space-api-fetcher-v2.hf.space/api\";\nconst QUEUE_FULL_MSG = \"This application is too busy. Keep trying!\";\nconst BROKEN_CONNECTION_MSG = \"Connection errored out.\";\nfunction resolve_root(base_url, root_path, prioritize_base) {\n  if (root_path.startsWith(\"http://\") || root_path.startsWith(\"https://\")) {\n    return prioritize_base ? base_url : root_path;\n  }\n  return base_url + root_path;\n}\nasync function get_jwt(space, token) {\n  try {\n    const r = await fetch(`https://huggingface.co/api/spaces/${space}/jwt`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const jwt = (await r.json()).token;\n    return jwt || false;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\nfunction map_names_to_ids(fns) {\n  let apis = {};\n  fns.forEach(({ api_name }, i) => {\n    if (api_name)\n      apis[api_name] = i;\n  });\n  return apis;\n}\nasync function resolve_config(endpoint) {\n  const headers = this.options.hf_token ? { Authorization: `Bearer ${this.options.hf_token}` } : {};\n  headers[\"Content-Type\"] = \"application/json\";\n  if (typeof window !== \"undefined\" && window.gradio_config && location.origin !== \"http://localhost:9876\" && !window.gradio_config.dev_mode) {\n    const path = window.gradio_config.root;\n    const config = window.gradio_config;\n    let config_root = resolve_root(endpoint, config.root, false);\n    config.root = config_root;\n    return { ...config, path };\n  } else if (endpoint) {\n    const response = await this.fetch_implementation(\n      `${endpoint}/${CONFIG_URL}`,\n      {\n        headers\n      }\n    );\n    if ((response == null ? void 0 : response.status) === 200) {\n      let config = await response.json();\n      config.path = config.path ?? \"\";\n      config.root = endpoint;\n      return config;\n    }\n    throw new Error(\"Could not get config.\");\n  }\n  throw new Error(\"No config or app endpoint found\");\n}\nfunction determine_protocol(endpoint) {\n  if (endpoint.startsWith(\"http\")) {\n    const { protocol, host } = new URL(endpoint);\n    if (host.endsWith(\"hf.space\")) {\n      return {\n        ws_protocol: \"wss\",\n        host,\n        http_protocol: protocol\n      };\n    }\n    return {\n      ws_protocol: protocol === \"https:\" ? \"wss\" : \"ws\",\n      http_protocol: protocol,\n      host\n    };\n  } else if (endpoint.startsWith(\"file:\")) {\n    return {\n      ws_protocol: \"ws\",\n      http_protocol: \"http:\",\n      host: \"lite.local\"\n      // Special fake hostname only used for this case. This matches the hostname allowed in `is_self_host()` in `js/wasm/network/host.ts`.\n    };\n  }\n  return {\n    ws_protocol: \"wss\",\n    http_protocol: \"https:\",\n    host: endpoint\n  };\n}\nconst RE_SPACE_NAME = /^[^\\/]*\\/[^\\/]*$/;\nconst RE_SPACE_DOMAIN = /.*hf\\.space\\/{0,1}$/;\nasync function process_endpoint(app_reference, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  const _app_reference = app_reference.trim();\n  if (RE_SPACE_NAME.test(_app_reference)) {\n    try {\n      const res = await fetch(\n        `https://huggingface.co/api/spaces/${_app_reference}/host`,\n        { headers }\n      );\n      if (res.status !== 200)\n        throw new Error(\"Space metadata could not be loaded.\");\n      const _host = (await res.json()).host;\n      return {\n        space_id: app_reference,\n        ...determine_protocol(_host)\n      };\n    } catch (e) {\n      throw new Error(\"Space metadata could not be loaded.\" + e.message);\n    }\n  }\n  if (RE_SPACE_DOMAIN.test(_app_reference)) {\n    const { ws_protocol, http_protocol, host } = determine_protocol(_app_reference);\n    return {\n      space_id: host.replace(\".hf.space\", \"\"),\n      ws_protocol,\n      http_protocol,\n      host\n    };\n  }\n  return {\n    space_id: false,\n    ...determine_protocol(_app_reference)\n  };\n}\nfunction transform_api_info(api_info, config, api_map) {\n  const transformed_info = {\n    named_endpoints: {},\n    unnamed_endpoints: {}\n  };\n  Object.keys(api_info).forEach((category) => {\n    if (category === \"named_endpoints\" || category === \"unnamed_endpoints\") {\n      transformed_info[category] = {};\n      Object.entries(api_info[category]).forEach(\n        ([endpoint, { parameters, returns }]) => {\n          const dependencyIndex = config.dependencies.findIndex((dep) => dep.api_name === endpoint) || api_map[endpoint.replace(\"/\", \"\")] || -1;\n          const dependencyTypes = dependencyIndex !== -1 ? config.dependencies[dependencyIndex].types : { continuous: false, generator: false };\n          const transform_type = (data, component, serializer, signature_type) => ({\n            ...data,\n            description: get_description(data.type, serializer),\n            type: get_type(data.type, component, serializer, signature_type) || \"\"\n          });\n          transformed_info[category][endpoint] = {\n            parameters: parameters.map(\n              (p) => transform_type(p, p.component, p.serializer, \"parameter\")\n            ),\n            returns: returns.map(\n              (r) => transform_type(r, r.component, r.serializer, \"return\")\n            ),\n            type: dependencyTypes\n          };\n        }\n      );\n    }\n  });\n  return transformed_info;\n}\nfunction get_type(type, component, serializer, signature_type) {\n  switch (type.type) {\n    case \"string\":\n      return \"string\";\n    case \"boolean\":\n      return \"boolean\";\n    case \"number\":\n      return \"number\";\n  }\n  if (serializer === \"JSONSerializable\" || serializer === \"StringSerializable\") {\n    return \"any\";\n  } else if (serializer === \"ListStringSerializable\") {\n    return \"string[]\";\n  } else if (component === \"Image\") {\n    return signature_type === \"parameter\" ? \"Blob | File | Buffer\" : \"string\";\n  } else if (serializer === \"FileSerializable\") {\n    if ((type == null ? void 0 : type.type) === \"array\") {\n      return signature_type === \"parameter\" ? \"(Blob | File | Buffer)[]\" : `{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}[]`;\n    }\n    return signature_type === \"parameter\" ? \"Blob | File | Buffer\" : `{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}`;\n  } else if (serializer === \"GallerySerializable\") {\n    return signature_type === \"parameter\" ? \"[(Blob | File | Buffer), (string | null)][]\" : `[{ name: string; data: string; size?: number; is_file?: boolean; orig_name?: string}, (string | null))][]`;\n  }\n}\nfunction get_description(type, serializer) {\n  if (serializer === \"GallerySerializable\") {\n    return \"array of [file, label] tuples\";\n  } else if (serializer === \"ListStringSerializable\") {\n    return \"array of strings\";\n  } else if (serializer === \"FileSerializable\") {\n    return \"array of files or single file\";\n  }\n  return type.description;\n}\nfunction handle_message(data, last_status) {\n  const queue = true;\n  switch (data.msg) {\n    case \"send_data\":\n      return { type: \"data\" };\n    case \"send_hash\":\n      return { type: \"hash\" };\n    case \"queue_full\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          message: QUEUE_FULL_MSG,\n          stage: \"error\",\n          code: data.code,\n          success: data.success\n        }\n      };\n    case \"heartbeat\":\n      return {\n        type: \"heartbeat\"\n      };\n    case \"unexpected_error\":\n      return {\n        type: \"unexpected_error\",\n        status: {\n          queue,\n          message: data.message,\n          stage: \"error\",\n          success: false\n        }\n      };\n    case \"estimation\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: last_status || \"pending\",\n          code: data.code,\n          size: data.queue_size,\n          position: data.rank,\n          eta: data.rank_eta,\n          success: data.success\n        }\n      };\n    case \"progress\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: \"pending\",\n          code: data.code,\n          progress_data: data.progress_data,\n          success: data.success\n        }\n      };\n    case \"log\":\n      return { type: \"log\", data };\n    case \"process_generating\":\n      return {\n        type: \"generating\",\n        status: {\n          queue,\n          message: !data.success ? data.output.error : null,\n          stage: data.success ? \"generating\" : \"error\",\n          code: data.code,\n          progress_data: data.progress_data,\n          eta: data.average_duration\n        },\n        data: data.success ? data.output : null\n      };\n    case \"process_completed\":\n      if (\"error\" in data.output) {\n        return {\n          type: \"update\",\n          status: {\n            queue,\n            message: data.output.error,\n            stage: \"error\",\n            code: data.code,\n            success: data.success\n          }\n        };\n      }\n      return {\n        type: \"complete\",\n        status: {\n          queue,\n          message: !data.success ? data.output.error : void 0,\n          stage: data.success ? \"complete\" : \"error\",\n          code: data.code,\n          progress_data: data.progress_data\n        },\n        data: data.success ? data.output : null\n      };\n    case \"process_starts\":\n      return {\n        type: \"update\",\n        status: {\n          queue,\n          stage: \"pending\",\n          code: data.code,\n          size: data.rank,\n          position: 0,\n          success: data.success,\n          eta: data.eta\n        }\n      };\n  }\n  return { type: \"none\", status: { stage: \"error\", queue } };\n}\nasync function view_api() {\n  if (this.api_info)\n    return this.api_info;\n  const { hf_token } = this.options;\n  const { config } = this;\n  const headers = { \"Content-Type\": \"application/json\" };\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  if (!config) {\n    return;\n  }\n  try {\n    let response;\n    if (semiver$1((config == null ? void 0 : config.version) || \"2.0.0\", \"3.30\") < 0) {\n      response = await this.fetch_implementation(SPACE_FETCHER_URL, {\n        method: \"POST\",\n        body: JSON.stringify({\n          serialize: false,\n          config: JSON.stringify(config)\n        }),\n        headers\n      });\n    } else {\n      response = await this.fetch_implementation(\n        `${config == null ? void 0 : config.root}/${API_INFO_URL}`,\n        {\n          headers\n        }\n      );\n    }\n    if (!response.ok) {\n      throw new Error(BROKEN_CONNECTION_MSG);\n    }\n    let api_info = await response.json();\n    if (\"api\" in api_info) {\n      api_info = api_info.api;\n    }\n    if (api_info.named_endpoints[\"/predict\"] && !api_info.unnamed_endpoints[\"0\"]) {\n      api_info.unnamed_endpoints[0] = api_info.named_endpoints[\"/predict\"];\n    }\n    return transform_api_info(api_info, config, this.api_map);\n  } catch (e) {\n    \"Could not get API info. \" + e.message;\n  }\n}\nasync function upload_files(root_url, files, upload_id) {\n  const headers = {};\n  if (this.options.hf_token) {\n    headers.Authorization = `Bearer ${this.options.hf_token}`;\n  }\n  const chunkSize = 1e3;\n  const uploadResponses = [];\n  for (let i = 0; i < files.length; i += chunkSize) {\n    const chunk = files.slice(i, i + chunkSize);\n    const formData = new FormData();\n    chunk.forEach((file) => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const upload_url = upload_id ? `${root_url}/upload?upload_id=${upload_id}` : `${root_url}/upload`;\n      var response = await this.fetch_implementation(upload_url, {\n        method: \"POST\",\n        body: formData,\n        headers\n      });\n    } catch (e) {\n      return { error: BROKEN_CONNECTION_MSG };\n    }\n    if (!response.ok) {\n      return { error: await response.text() };\n    }\n    const output = await response.json();\n    if (output) {\n      uploadResponses.push(...output);\n    }\n  }\n  return { files: uploadResponses };\n}\nfunction update_object(object, newValue, stack) {\n  while (stack.length > 1) {\n    const key2 = stack.shift();\n    if (typeof key2 === \"string\" || typeof key2 === \"number\") {\n      object = object[key2];\n    } else {\n      throw new Error(\"Invalid key type\");\n    }\n  }\n  const key = stack.shift();\n  if (typeof key === \"string\" || typeof key === \"number\") {\n    object[key] = newValue;\n  } else {\n    throw new Error(\"Invalid key type\");\n  }\n}\nasync function walk_and_store_blobs(param, type = void 0, path = [], root = false, endpoint_info = void 0) {\n  if (Array.isArray(param)) {\n    let blob_refs = [];\n    await Promise.all(\n      param.map(async (item) => {\n        var _a;\n        let new_path = path.slice();\n        new_path.push(item);\n        const array_refs = await walk_and_store_blobs(\n          param[item],\n          root ? ((_a = endpoint_info == null ? void 0 : endpoint_info.parameters[item]) == null ? void 0 : _a.component) || void 0 : type,\n          new_path,\n          false,\n          endpoint_info\n        );\n        blob_refs = blob_refs.concat(array_refs);\n      })\n    );\n    return blob_refs;\n  } else if (globalThis.Buffer && param instanceof globalThis.Buffer) {\n    const is_image = type === \"Image\";\n    return [\n      {\n        path,\n        blob: is_image ? false : new NodeBlob([param]),\n        type\n      }\n    ];\n  } else if (typeof param === \"object\") {\n    let blob_refs = [];\n    for (let key in param) {\n      if (param.hasOwnProperty(key)) {\n        let new_path = path.slice();\n        new_path.push(key);\n        blob_refs = blob_refs.concat(\n          await walk_and_store_blobs(\n            // @ts-ignore\n            param[key],\n            void 0,\n            new_path,\n            false,\n            endpoint_info\n          )\n        );\n      }\n    }\n    return blob_refs;\n  }\n  return [];\n}\nfunction skip_queue(id, config) {\n  var _a, _b, _c, _d;\n  return !(((_b = (_a = config == null ? void 0 : config.dependencies) == null ? void 0 : _a[id]) == null ? void 0 : _b.queue) === null ? config.enable_queue : (_d = (_c = config == null ? void 0 : config.dependencies) == null ? void 0 : _c[id]) == null ? void 0 : _d.queue) || false;\n}\nfunction post_message(message, origin) {\n  return new Promise((res, _rej) => {\n    const channel = new MessageChannel();\n    channel.port1.onmessage = ({ data }) => {\n      channel.port1.close();\n      res(data);\n    };\n    window.parent.postMessage(message, origin, [channel.port2]);\n  });\n}\nasync function upload(file_data, root_url, upload_id, max_file_size, upload_fn = upload_files) {\n  let files = (Array.isArray(file_data) ? file_data : [file_data]).map(\n    (file_data2) => file_data2.blob\n  );\n  const oversized_files = files.filter(\n    (f) => f.size > (max_file_size ?? Infinity)\n  );\n  if (oversized_files.length) {\n    throw new Error(\n      `File size exceeds the maximum allowed size of ${max_file_size} bytes: ${oversized_files.map((f) => f.name).join(\", \")}`\n    );\n  }\n  return await Promise.all(\n    await upload_fn(root_url, files, upload_id).then(\n      async (response) => {\n        if (response.error) {\n          throw new Error(response.error);\n        } else {\n          if (response.files) {\n            return response.files.map((f, i) => {\n              const file = new FileData({\n                ...file_data[i],\n                path: f,\n                url: root_url + \"/file=\" + f\n              });\n              return file;\n            });\n          }\n          return [];\n        }\n      }\n    )\n  );\n}\nasync function prepare_files(files, is_stream) {\n  return files.map(\n    (f) => new FileData({\n      path: f.name,\n      orig_name: f.name,\n      blob: f,\n      size: f.size,\n      mime_type: f.type,\n      is_stream\n    })\n  );\n}\nclass FileData {\n  constructor({\n    path,\n    url,\n    orig_name,\n    size,\n    blob,\n    is_stream,\n    mime_type,\n    alt_text\n  }) {\n    __publicField(this, \"path\");\n    __publicField(this, \"url\");\n    __publicField(this, \"orig_name\");\n    __publicField(this, \"size\");\n    __publicField(this, \"blob\");\n    __publicField(this, \"is_stream\");\n    __publicField(this, \"mime_type\");\n    __publicField(this, \"alt_text\");\n    __publicField(this, \"meta\", { _type: \"gradio.FileData\" });\n    this.path = path;\n    this.url = url;\n    this.orig_name = orig_name;\n    this.size = size;\n    this.blob = url ? void 0 : blob;\n    this.is_stream = is_stream;\n    this.mime_type = mime_type;\n    this.alt_text = alt_text;\n  }\n}\nasync function handle_blob(endpoint, data, api_info) {\n  const self = this;\n  const blobRefs = await walk_and_store_blobs(\n    data,\n    void 0,\n    [],\n    true,\n    api_info\n  );\n  const results = await Promise.all(\n    blobRefs.map(async ({ path, blob, type }) => {\n      if (!blob)\n        return { path, type };\n      const response = await self.upload_files(endpoint, [blob]);\n      const file_url = response.files && response.files[0];\n      return {\n        path,\n        file_url,\n        type,\n        name: blob == null ? void 0 : blob.name\n      };\n    })\n  );\n  results.forEach(({ path, file_url, type, name }) => {\n    if (type === \"Gallery\") {\n      update_object(data, file_url, path);\n    } else if (file_url) {\n      const file = new FileData({ path: file_url, orig_name: name });\n      update_object(data, file, path);\n    }\n  });\n  return data;\n}\nasync function post_data(url, body, additional_headers) {\n  const headers = { \"Content-Type\": \"application/json\" };\n  if (this.options.hf_token) {\n    headers.Authorization = `Bearer ${this.options.hf_token}`;\n  }\n  try {\n    var response = await this.fetch_implementation(url, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { ...headers, ...additional_headers }\n    });\n  } catch (e) {\n    return [{ error: BROKEN_CONNECTION_MSG }, 500];\n  }\n  let output;\n  let status;\n  try {\n    output = await response.json();\n    status = response.status;\n  } catch (e) {\n    output = { error: `Could not parse server response: ${e}` };\n    status = 500;\n  }\n  return [output, status];\n}\nasync function predict(endpoint, data) {\n  let data_returned = false;\n  let status_complete = false;\n  let dependency;\n  if (!this.config) {\n    throw new Error(\"Could not resolve app config\");\n  }\n  if (typeof endpoint === \"number\") {\n    dependency = this.config.dependencies[endpoint];\n  } else {\n    const trimmed_endpoint = endpoint.replace(/^\\//, \"\");\n    dependency = this.config.dependencies[this.api_map[trimmed_endpoint]];\n  }\n  if (dependency == null ? void 0 : dependency.types.continuous) {\n    throw new Error(\n      \"Cannot call predict on this function as it may run forever. Use submit instead\"\n    );\n  }\n  return new Promise(async (resolve, reject) => {\n    const app = this.submit(endpoint, data || []);\n    let result;\n    app.on(\"data\", (d) => {\n      if (status_complete) {\n        app.destroy();\n        resolve(d);\n      }\n      data_returned = true;\n      result = d;\n    }).on(\"status\", (status) => {\n      if (status.stage === \"error\")\n        reject(status);\n      if (status.stage === \"complete\") {\n        status_complete = true;\n        if (data_returned) {\n          app.destroy();\n          resolve(result);\n        }\n      }\n    });\n  });\n}\nasync function check_space_status(id, type, status_callback) {\n  let endpoint = type === \"subdomain\" ? `https://huggingface.co/api/spaces/by-subdomain/${id}` : `https://huggingface.co/api/spaces/${id}`;\n  let response;\n  let _status;\n  try {\n    response = await fetch(endpoint);\n    _status = response.status;\n    if (_status !== 200) {\n      throw new Error();\n    }\n    response = await response.json();\n  } catch (e) {\n    status_callback({\n      status: \"error\",\n      load_status: \"error\",\n      message: \"Could not get space status\",\n      detail: \"NOT_FOUND\"\n    });\n    return;\n  }\n  if (!response || _status !== 200)\n    return;\n  const {\n    runtime: { stage },\n    id: space_name\n  } = response;\n  switch (stage) {\n    case \"STOPPED\":\n    case \"SLEEPING\":\n      status_callback({\n        status: \"sleeping\",\n        load_status: \"pending\",\n        message: \"Space is asleep. Waking it up...\",\n        detail: stage\n      });\n      setTimeout(() => {\n        check_space_status(id, type, status_callback);\n      }, 1e3);\n      break;\n    case \"PAUSED\":\n      status_callback({\n        status: \"paused\",\n        load_status: \"error\",\n        message: \"This space has been paused by the author. If you would like to try this demo, consider duplicating the space.\",\n        detail: stage,\n        discussions_enabled: await discussions_enabled(space_name)\n      });\n      break;\n    case \"RUNNING\":\n    case \"RUNNING_BUILDING\":\n      status_callback({\n        status: \"running\",\n        load_status: \"complete\",\n        message: \"\",\n        detail: stage\n      });\n      break;\n    case \"BUILDING\":\n      status_callback({\n        status: \"building\",\n        load_status: \"pending\",\n        message: \"Space is building...\",\n        detail: stage\n      });\n      setTimeout(() => {\n        check_space_status(id, type, status_callback);\n      }, 1e3);\n      break;\n    default:\n      status_callback({\n        status: \"space_error\",\n        load_status: \"error\",\n        message: \"This space is experiencing an issue.\",\n        detail: stage,\n        discussions_enabled: await discussions_enabled(space_name)\n      });\n      break;\n  }\n}\nconst RE_DISABLED_DISCUSSION = /^(?=[^]*\\b[dD]iscussions{0,1}\\b)(?=[^]*\\b[dD]isabled\\b)[^]*$/;\nasync function discussions_enabled(space_id) {\n  try {\n    const r = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/discussions`,\n      {\n        method: \"HEAD\"\n      }\n    );\n    const error = r.headers.get(\"x-error-message\");\n    if (error && RE_DISABLED_DISCUSSION.test(error))\n      return false;\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nasync function get_space_hardware(space_id, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  try {\n    const res = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/runtime`,\n      { headers }\n    );\n    if (res.status !== 200)\n      throw new Error(\"Space hardware could not be obtained.\");\n    const { hardware } = await res.json();\n    return hardware.current;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n}\nasync function set_space_timeout(space_id, timeout, hf_token) {\n  const headers = {};\n  if (hf_token) {\n    headers.Authorization = `Bearer ${hf_token}`;\n  }\n  const body = {\n    seconds: timeout\n  };\n  try {\n    const res = await fetch(\n      `https://huggingface.co/api/spaces/${space_id}/sleeptime`,\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\", ...headers },\n        body: JSON.stringify(body)\n      }\n    );\n    if (res.status !== 200) {\n      throw new Error(\n        \"Could not set sleep timeout on duplicated Space. Please visit *ADD HF LINK TO SETTINGS* to set a timeout manually to reduce billing charges.\"\n      );\n    }\n    const response = await res.json();\n    return response;\n  } catch (e) {\n    throw new Error(e.message);\n  }\n}\nconst hardware_types = [\n  \"cpu-basic\",\n  \"cpu-upgrade\",\n  \"cpu-xl\",\n  \"t4-small\",\n  \"t4-medium\",\n  \"a10g-small\",\n  \"a10g-large\",\n  \"a10g-largex2\",\n  \"a10g-largex4\",\n  \"a100-large\",\n  \"zero-a10g\",\n  \"h100\",\n  \"h100x8\"\n];\nasync function duplicate(app_reference, options) {\n  const { hf_token, private: _private, hardware, timeout } = options;\n  if (hardware && !hardware_types.includes(hardware)) {\n    throw new Error(\n      `Invalid hardware type provided. Valid types are: ${hardware_types.map((v) => `\"${v}\"`).join(\",\")}.`\n    );\n  }\n  const headers = {\n    Authorization: `Bearer ${hf_token}`,\n    \"Content-Type\": \"application/json\"\n  };\n  const user = (await (await fetch(`https://huggingface.co/api/whoami-v2`, {\n    headers\n  })).json()).name;\n  const space_name = app_reference.split(\"/\")[1];\n  const body = {\n    repository: `${user}/${space_name}`\n  };\n  if (_private) {\n    body.private = true;\n  }\n  let original_hardware;\n  if (!hardware) {\n    original_hardware = await get_space_hardware(app_reference, hf_token);\n  }\n  const requested_hardware = hardware || original_hardware || \"cpu-basic\";\n  body.hardware = requested_hardware;\n  try {\n    const response = await fetch(\n      `https://huggingface.co/api/spaces/${app_reference}/duplicate`,\n      {\n        method: \"POST\",\n        headers,\n        body: JSON.stringify(body)\n      }\n    );\n    if (response.status === 409) {\n      try {\n        const client2 = await Client.connect(`${user}/${space_name}`, options);\n        return client2;\n      } catch (error) {\n        console.error(\"Failed to connect Client instance:\", error);\n        throw error;\n      }\n    } else if (response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const duplicated_space = await response.json();\n    await set_space_timeout(`${user}/${space_name}`, timeout || 300, hf_token);\n    return await Client.connect(duplicated_space.url, options);\n  } catch (e) {\n    throw new Error(e);\n  }\n}\nfunction open_stream() {\n  let {\n    event_callbacks,\n    unclosed_events,\n    pending_stream_messages,\n    stream_status,\n    config\n  } = this;\n  if (!config) {\n    throw new Error(\"Could not resolve app config\");\n  }\n  stream_status.open = true;\n  let event_source = null;\n  let params = new URLSearchParams({\n    session_hash: this.session_hash\n  }).toString();\n  let url = new URL(`${config.root}/queue/data?${params}`);\n  event_source = this.eventSource_factory(url);\n  if (!event_source) {\n    throw new Error(\"Cannot connect to sse endpoint: \" + url.toString());\n  }\n  event_source.onmessage = async function(event) {\n    let _data = JSON.parse(event.data);\n    if (_data.msg === \"close_stream\") {\n      close_stream(stream_status, event_source);\n      return;\n    }\n    const event_id = _data.event_id;\n    if (!event_id) {\n      await Promise.all(\n        Object.keys(event_callbacks).map(\n          (event_id2) => (\n            // @ts-ignore\n            event_callbacks[event_id2](_data)\n          )\n          // todo: check event_callbacks\n        )\n      );\n    } else if (event_callbacks[event_id] && config) {\n      if (_data.msg === \"process_completed\" && [\"sse\", \"sse_v1\", \"sse_v2\", \"sse_v2.1\"].includes(config.protocol)) {\n        unclosed_events.delete(event_id);\n        if (unclosed_events.size === 0) {\n          close_stream(stream_status, event_source);\n        }\n      }\n      let fn2 = event_callbacks[event_id];\n      window.setTimeout(fn2, 0, _data);\n    } else {\n      if (!pending_stream_messages[event_id]) {\n        pending_stream_messages[event_id] = [];\n      }\n      pending_stream_messages[event_id].push(_data);\n    }\n  };\n  event_source.onerror = async function() {\n    await Promise.all(\n      Object.keys(event_callbacks).map(\n        (event_id) => (\n          // @ts-ignore\n          event_callbacks[event_id]({\n            msg: \"unexpected_error\",\n            message: BROKEN_CONNECTION_MSG\n          })\n        )\n      )\n    );\n    close_stream(stream_status, event_source);\n  };\n}\nfunction close_stream(stream_status, event_source) {\n  if (stream_status && event_source) {\n    stream_status.open = false;\n    event_source == null ? void 0 : event_source.close();\n  }\n}\nfunction apply_diff_stream(pending_diff_streams, event_id, data) {\n  let is_first_generation = !pending_diff_streams[event_id];\n  if (is_first_generation) {\n    pending_diff_streams[event_id] = [];\n    data.data.forEach((value, i) => {\n      pending_diff_streams[event_id][i] = value;\n    });\n  } else {\n    data.data.forEach((value, i) => {\n      let new_data = apply_diff(pending_diff_streams[event_id][i], value);\n      pending_diff_streams[event_id][i] = new_data;\n      data.data[i] = new_data;\n    });\n  }\n}\nfunction apply_diff(obj, diff) {\n  diff.forEach(([action, path, value]) => {\n    obj = apply_edit(obj, path, action, value);\n  });\n  return obj;\n}\nfunction apply_edit(target, path, action, value) {\n  if (path.length === 0) {\n    if (action === \"replace\") {\n      return value;\n    } else if (action === \"append\") {\n      return target + value;\n    }\n    throw new Error(`Unsupported action: ${action}`);\n  }\n  let current = target;\n  for (let i = 0; i < path.length - 1; i++) {\n    current = current[path[i]];\n  }\n  const last_path = path[path.length - 1];\n  switch (action) {\n    case \"replace\":\n      current[last_path] = value;\n      break;\n    case \"append\":\n      current[last_path] += value;\n      break;\n    case \"add\":\n      if (Array.isArray(current)) {\n        current.splice(Number(last_path), 0, value);\n      } else {\n        current[last_path] = value;\n      }\n      break;\n    case \"delete\":\n      if (Array.isArray(current)) {\n        current.splice(Number(last_path), 1);\n      } else {\n        delete current[last_path];\n      }\n      break;\n    default:\n      throw new Error(`Unknown action: ${action}`);\n  }\n  return target;\n}\nfunction submit(endpoint, data, event_data, trigger_id) {\n  try {\n    let fire_event = function(event) {\n      const narrowed_listener_map = listener_map;\n      const listeners = narrowed_listener_map[event.type] || [];\n      listeners == null ? void 0 : listeners.forEach((l) => l(event));\n    }, on = function(eventType, listener) {\n      const narrowed_listener_map = listener_map;\n      const listeners = narrowed_listener_map[eventType] || [];\n      narrowed_listener_map[eventType] = listeners;\n      listeners == null ? void 0 : listeners.push(listener);\n      return { on, off, cancel, destroy };\n    }, off = function(eventType, listener) {\n      const narrowed_listener_map = listener_map;\n      let listeners = narrowed_listener_map[eventType] || [];\n      listeners = listeners == null ? void 0 : listeners.filter((l) => l !== listener);\n      narrowed_listener_map[eventType] = listeners;\n      return { on, off, cancel, destroy };\n    }, destroy = function() {\n      var _a;\n      for (const event_type in listener_map) {\n        listener_map && ((_a = listener_map[event_type]) == null ? void 0 : _a.forEach((fn2) => {\n          off(event_type, fn2);\n        }));\n      }\n    };\n    const { hf_token } = this.options;\n    const {\n      fetch_implementation,\n      app_reference,\n      config,\n      session_hash,\n      api_info,\n      api_map,\n      stream_status,\n      pending_stream_messages,\n      pending_diff_streams,\n      event_callbacks,\n      unclosed_events,\n      post_data: post_data2\n    } = this;\n    if (!api_info)\n      throw new Error(\"No API found\");\n    if (!config)\n      throw new Error(\"Could not resolve app config\");\n    let { fn_index, endpoint_info, dependency } = get_endpoint_info(\n      api_info,\n      endpoint,\n      api_map,\n      config\n    );\n    let websocket;\n    let event_source;\n    let protocol = config.protocol ?? \"ws\";\n    const _endpoint = typeof endpoint === \"number\" ? \"/predict\" : endpoint;\n    let payload;\n    let event_id = null;\n    let complete = false;\n    const listener_map = {};\n    let last_status = {};\n    let url_params = typeof window !== \"undefined\" ? new URLSearchParams(window.location.search).toString() : \"\";\n    async function cancel() {\n      const _status = {\n        stage: \"complete\",\n        queue: false,\n        time: /* @__PURE__ */ new Date()\n      };\n      complete = _status;\n      fire_event({\n        ..._status,\n        type: \"status\",\n        endpoint: _endpoint,\n        fn_index\n      });\n      let cancel_request = {};\n      if (protocol === \"ws\") {\n        if (websocket && websocket.readyState === 0) {\n          websocket.addEventListener(\"open\", () => {\n            websocket.close();\n          });\n        } else {\n          websocket.close();\n        }\n        cancel_request = { fn_index, session_hash };\n      } else {\n        event_source == null ? void 0 : event_source.close();\n        cancel_request = { event_id };\n      }\n      try {\n        if (!config) {\n          throw new Error(\"Could not resolve app config\");\n        }\n        await fetch_implementation(`${config.root}/reset`, {\n          headers: { \"Content-Type\": \"application/json\" },\n          method: \"POST\",\n          body: JSON.stringify(cancel_request)\n        });\n      } catch (e) {\n        console.warn(\n          \"The `/reset` endpoint could not be called. Subsequent endpoint results may be unreliable.\"\n        );\n      }\n    }\n    this.handle_blob(`${config.root}`, data, endpoint_info).then(\n      async (_payload) => {\n        payload = {\n          data: _payload || [],\n          event_data,\n          fn_index,\n          trigger_id\n        };\n        if (skip_queue(fn_index, config)) {\n          fire_event({\n            type: \"status\",\n            endpoint: _endpoint,\n            stage: \"pending\",\n            queue: false,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          post_data2(\n            `${config.root}/run${_endpoint.startsWith(\"/\") ? _endpoint : `/${_endpoint}`}${url_params ? \"?\" + url_params : \"\"}`,\n            {\n              ...payload,\n              session_hash\n            }\n          ).then(([output, status_code]) => {\n            const data2 = output.data;\n            if (status_code == 200) {\n              fire_event({\n                type: \"data\",\n                endpoint: _endpoint,\n                fn_index,\n                data: data2,\n                time: /* @__PURE__ */ new Date(),\n                event_data,\n                trigger_id\n              });\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                stage: \"complete\",\n                eta: output.average_duration,\n                queue: false,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                endpoint: _endpoint,\n                fn_index,\n                message: output.error,\n                queue: false,\n                time: /* @__PURE__ */ new Date()\n              });\n            }\n          }).catch((e) => {\n            fire_event({\n              type: \"status\",\n              stage: \"error\",\n              message: e.message,\n              endpoint: _endpoint,\n              fn_index,\n              queue: false,\n              time: /* @__PURE__ */ new Date()\n            });\n          });\n        } else if (protocol == \"ws\") {\n          const { ws_protocol, host } = await process_endpoint(\n            app_reference,\n            hf_token\n          );\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          let url = new URL(\n            `${ws_protocol}://${resolve_root(\n              host,\n              config.path,\n              true\n            )}/queue/join${url_params ? \"?\" + url_params : \"\"}`\n          );\n          if (this.jwt) {\n            url.searchParams.set(\"__sign\", this.jwt);\n          }\n          websocket = new WebSocket(url);\n          websocket.onclose = (evt) => {\n            if (!evt.wasClean) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                broken: true,\n                message: BROKEN_CONNECTION_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            }\n          };\n          websocket.onmessage = function(event) {\n            const _data = JSON.parse(event.data);\n            const { type, status, data: data2 } = handle_message(\n              _data,\n              last_status[fn_index]\n            );\n            if (type === \"update\" && status && !complete) {\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date(),\n                ...status\n              });\n              if (status.stage === \"error\") {\n                websocket.close();\n              }\n            } else if (type === \"hash\") {\n              websocket.send(JSON.stringify({ fn_index, session_hash }));\n              return;\n            } else if (type === \"data\") {\n              websocket.send(JSON.stringify({ ...payload, session_hash }));\n            } else if (type === \"complete\") {\n              complete = status;\n            } else if (type === \"log\") {\n              fire_event({\n                type: \"log\",\n                log: data2.log,\n                level: data2.level,\n                endpoint: _endpoint,\n                fn_index\n              });\n            } else if (type === \"generating\") {\n              fire_event({\n                type: \"status\",\n                time: /* @__PURE__ */ new Date(),\n                ...status,\n                stage: status == null ? void 0 : status.stage,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index\n              });\n            }\n            if (data2) {\n              fire_event({\n                type: \"data\",\n                time: /* @__PURE__ */ new Date(),\n                data: data2.data,\n                endpoint: _endpoint,\n                fn_index,\n                event_data,\n                trigger_id\n              });\n              if (complete) {\n                fire_event({\n                  type: \"status\",\n                  time: /* @__PURE__ */ new Date(),\n                  ...complete,\n                  stage: status == null ? void 0 : status.stage,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index\n                });\n                websocket.close();\n              }\n            }\n          };\n          if (semiver(config.version || \"2.0.0\", \"3.6\") < 0) {\n            addEventListener(\n              \"open\",\n              () => websocket.send(JSON.stringify({ hash: session_hash }))\n            );\n          }\n        } else if (protocol == \"sse\") {\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          var params = new URLSearchParams({\n            fn_index: fn_index.toString(),\n            session_hash\n          }).toString();\n          let url = new URL(\n            `${config.root}/queue/join?${url_params ? url_params + \"&\" : \"\"}${params}`\n          );\n          event_source = this.eventSource_factory(url);\n          if (!event_source) {\n            throw new Error(\n              \"Cannot connect to sse endpoint: \" + url.toString()\n            );\n          }\n          event_source.onmessage = async function(event) {\n            const _data = JSON.parse(event.data);\n            const { type, status, data: data2 } = handle_message(\n              _data,\n              last_status[fn_index]\n            );\n            if (type === \"update\" && status && !complete) {\n              fire_event({\n                type: \"status\",\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date(),\n                ...status\n              });\n              if (status.stage === \"error\") {\n                event_source == null ? void 0 : event_source.close();\n              }\n            } else if (type === \"data\") {\n              event_id = _data.event_id;\n              let [_, status2] = await post_data2(`${config.root}/queue/data`, {\n                ...payload,\n                session_hash,\n                event_id\n              });\n              if (status2 !== 200) {\n                fire_event({\n                  type: \"status\",\n                  stage: \"error\",\n                  message: BROKEN_CONNECTION_MSG,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index,\n                  time: /* @__PURE__ */ new Date()\n                });\n                event_source == null ? void 0 : event_source.close();\n              }\n            } else if (type === \"complete\") {\n              complete = status;\n            } else if (type === \"log\") {\n              fire_event({\n                type: \"log\",\n                log: data2.log,\n                level: data2.level,\n                endpoint: _endpoint,\n                fn_index\n              });\n            } else if (type === \"generating\") {\n              fire_event({\n                type: \"status\",\n                time: /* @__PURE__ */ new Date(),\n                ...status,\n                stage: status == null ? void 0 : status.stage,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index\n              });\n            }\n            if (data2) {\n              fire_event({\n                type: \"data\",\n                time: /* @__PURE__ */ new Date(),\n                data: data2.data,\n                endpoint: _endpoint,\n                fn_index,\n                event_data,\n                trigger_id\n              });\n              if (complete) {\n                fire_event({\n                  type: \"status\",\n                  time: /* @__PURE__ */ new Date(),\n                  ...complete,\n                  stage: status == null ? void 0 : status.stage,\n                  queue: true,\n                  endpoint: _endpoint,\n                  fn_index\n                });\n                event_source == null ? void 0 : event_source.close();\n              }\n            }\n          };\n        } else if (protocol == \"sse_v1\" || protocol == \"sse_v2\" || protocol == \"sse_v2.1\" || protocol == \"sse_v3\") {\n          fire_event({\n            type: \"status\",\n            stage: \"pending\",\n            queue: true,\n            endpoint: _endpoint,\n            fn_index,\n            time: /* @__PURE__ */ new Date()\n          });\n          let hostname = window.location.hostname;\n          let hfhubdev = \"dev.spaces.huggingface.tech\";\n          const origin = hostname.includes(\".dev.\") ? `https://moon-${hostname.split(\".\")[1]}.${hfhubdev}` : `https://huggingface.co`;\n          const zerogpu_auth_promise = dependency.zerogpu && window.parent != window && config.space_id ? post_message(\"zerogpu-headers\", origin) : Promise.resolve(null);\n          const post_data_promise = zerogpu_auth_promise.then((headers) => {\n            return post_data2(\n              `${config.root}/queue/join?${url_params}`,\n              {\n                ...payload,\n                session_hash\n              },\n              headers\n            );\n          });\n          post_data_promise.then(([response, status]) => {\n            if (status === 503) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                message: QUEUE_FULL_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else if (status !== 200) {\n              fire_event({\n                type: \"status\",\n                stage: \"error\",\n                message: BROKEN_CONNECTION_MSG,\n                queue: true,\n                endpoint: _endpoint,\n                fn_index,\n                time: /* @__PURE__ */ new Date()\n              });\n            } else {\n              event_id = response.event_id;\n              let callback = async function(_data) {\n                try {\n                  const { type, status: status2, data: data2 } = handle_message(\n                    _data,\n                    last_status[fn_index]\n                  );\n                  if (type == \"heartbeat\") {\n                    return;\n                  }\n                  if (type === \"update\" && status2 && !complete) {\n                    fire_event({\n                      type: \"status\",\n                      endpoint: _endpoint,\n                      fn_index,\n                      time: /* @__PURE__ */ new Date(),\n                      ...status2\n                    });\n                  } else if (type === \"complete\") {\n                    complete = status2;\n                  } else if (type == \"unexpected_error\") {\n                    console.error(\"Unexpected error\", status2 == null ? void 0 : status2.message);\n                    fire_event({\n                      type: \"status\",\n                      stage: \"error\",\n                      message: (status2 == null ? void 0 : status2.message) || \"An Unexpected Error Occurred!\",\n                      queue: true,\n                      endpoint: _endpoint,\n                      fn_index,\n                      time: /* @__PURE__ */ new Date()\n                    });\n                  } else if (type === \"log\") {\n                    fire_event({\n                      type: \"log\",\n                      log: data2.log,\n                      level: data2.level,\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    return;\n                  } else if (type === \"generating\") {\n                    fire_event({\n                      type: \"status\",\n                      time: /* @__PURE__ */ new Date(),\n                      ...status2,\n                      stage: status2 == null ? void 0 : status2.stage,\n                      queue: true,\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    if (data2 && [\"sse_v2\", \"sse_v2.1\", \"sse_v3\"].includes(protocol)) {\n                      apply_diff_stream(pending_diff_streams, event_id, data2);\n                    }\n                  }\n                  if (data2) {\n                    fire_event({\n                      type: \"data\",\n                      time: /* @__PURE__ */ new Date(),\n                      data: data2.data,\n                      endpoint: _endpoint,\n                      fn_index\n                    });\n                    if (complete) {\n                      fire_event({\n                        type: \"status\",\n                        time: /* @__PURE__ */ new Date(),\n                        ...complete,\n                        stage: status2 == null ? void 0 : status2.stage,\n                        queue: true,\n                        endpoint: _endpoint,\n                        fn_index\n                      });\n                    }\n                  }\n                  if ((status2 == null ? void 0 : status2.stage) === \"complete\" || (status2 == null ? void 0 : status2.stage) === \"error\") {\n                    if (event_callbacks[event_id]) {\n                      delete event_callbacks[event_id];\n                    }\n                    if (event_id in pending_diff_streams) {\n                      delete pending_diff_streams[event_id];\n                    }\n                  }\n                } catch (e) {\n                  console.error(\"Unexpected client exception\", e);\n                  fire_event({\n                    type: \"status\",\n                    stage: \"error\",\n                    message: \"An Unexpected Error Occurred!\",\n                    queue: true,\n                    endpoint: _endpoint,\n                    fn_index,\n                    time: /* @__PURE__ */ new Date()\n                  });\n                  if ([\"sse_v2\", \"sse_v2.1\"].includes(protocol)) {\n                    close_stream(stream_status, event_source);\n                    stream_status.open = false;\n                  }\n                }\n              };\n              if (event_id in pending_stream_messages) {\n                pending_stream_messages[event_id].forEach(\n                  (msg) => callback(msg)\n                );\n                delete pending_stream_messages[event_id];\n              }\n              event_callbacks[event_id] = callback;\n              unclosed_events.add(event_id);\n              if (!stream_status.open) {\n                this.open_stream();\n              }\n            }\n          });\n        }\n      }\n    );\n    return { on, off, cancel, destroy };\n  } catch (error) {\n    console.error(\"Submit function encountered an error:\", error);\n    throw error;\n  }\n}\nfunction get_endpoint_info(api_info, endpoint, api_map, config) {\n  let fn_index;\n  let endpoint_info;\n  let dependency;\n  if (typeof endpoint === \"number\") {\n    fn_index = endpoint;\n    endpoint_info = api_info.unnamed_endpoints[fn_index];\n    dependency = config.dependencies[endpoint];\n  } else {\n    const trimmed_endpoint = endpoint.replace(/^\\//, \"\");\n    fn_index = api_map[trimmed_endpoint];\n    endpoint_info = api_info.named_endpoints[endpoint.trim()];\n    dependency = config.dependencies[api_map[trimmed_endpoint]];\n  }\n  if (typeof fn_index !== \"number\") {\n    throw new Error(\n      \"There is no endpoint matching that name of fn_index matching that number.\"\n    );\n  }\n  return { fn_index, endpoint_info, dependency };\n}\nclass NodeBlob extends Blob {\n  constructor(blobParts, options) {\n    super(blobParts, options);\n  }\n}\nclass Client {\n  constructor(app_reference, options = {}) {\n    __publicField(this, \"app_reference\");\n    __publicField(this, \"options\");\n    __publicField(this, \"config\");\n    __publicField(this, \"api_info\");\n    __publicField(this, \"api_map\", {});\n    __publicField(this, \"session_hash\", Math.random().toString(36).substring(2));\n    __publicField(this, \"jwt\", false);\n    __publicField(this, \"last_status\", {});\n    // streaming\n    __publicField(this, \"stream_status\", { open: false });\n    __publicField(this, \"pending_stream_messages\", {});\n    __publicField(this, \"pending_diff_streams\", {});\n    __publicField(this, \"event_callbacks\", {});\n    __publicField(this, \"unclosed_events\", /* @__PURE__ */ new Set());\n    __publicField(this, \"heartbeat_event\", null);\n    __publicField(this, \"view_api\");\n    __publicField(this, \"upload_files\");\n    __publicField(this, \"handle_blob\");\n    __publicField(this, \"post_data\");\n    __publicField(this, \"submit\");\n    __publicField(this, \"predict\");\n    __publicField(this, \"open_stream\");\n    __publicField(this, \"resolve_config\");\n    this.app_reference = app_reference;\n    this.options = options;\n    this.view_api = view_api.bind(this);\n    this.upload_files = upload_files.bind(this);\n    this.handle_blob = handle_blob.bind(this);\n    this.post_data = post_data.bind(this);\n    this.submit = submit.bind(this);\n    this.predict = predict.bind(this);\n    this.open_stream = open_stream.bind(this);\n    this.resolve_config = resolve_config.bind(this);\n  }\n  fetch_implementation(input, init) {\n    return fetch(input, init);\n  }\n  eventSource_factory(url) {\n    if (typeof window !== void 0 && typeof EventSource !== \"undefined\") {\n      return new EventSource(url.toString());\n    }\n    return null;\n  }\n  async init() {\n    var _a;\n    if ((typeof window === \"undefined\" || !(\"WebSocket\" in window)) && !global.WebSocket) {\n      const ws = await import(\"./wrapper-CviSselG.js\");\n      NodeBlob = (await import(\"node:buffer\")).Blob;\n      global.WebSocket = ws.WebSocket;\n    }\n    try {\n      await this._resolve_config().then(async ({ config }) => {\n        if (config) {\n          this.config = config;\n          if (this.config) {\n            const heartbeat_url = new URL(\n              `${this.config.root}/heartbeat/${this.session_hash}`\n            );\n            this.heartbeat_event = this.eventSource_factory(heartbeat_url);\n            if (this.config.space_id && this.options.hf_token) {\n              this.jwt = await get_jwt(\n                this.config.space_id,\n                this.options.hf_token\n              );\n            }\n          }\n        }\n      });\n    } catch (e) {\n      throw Error(`Could not resolve config: ${e}`);\n    }\n    this.api_info = await this.view_api();\n    this.api_map = map_names_to_ids(((_a = this.config) == null ? void 0 : _a.dependencies) || []);\n  }\n  static async connect(app_reference, options = {}) {\n    const client2 = new this(app_reference, options);\n    await client2.init();\n    return client2;\n  }\n  close() {\n    var _a;\n    (_a = this.heartbeat_event) == null ? void 0 : _a.close();\n  }\n  static async duplicate(app_reference, options = {}) {\n    return duplicate(app_reference, options);\n  }\n  async _resolve_config() {\n    const { http_protocol, host, space_id } = await process_endpoint(\n      this.app_reference,\n      this.options.hf_token\n    );\n    const { status_callback } = this.options;\n    let config;\n    try {\n      config = await this.resolve_config(`${http_protocol}//${host}`);\n      if (!config) {\n        throw new Error(\"Could not resolve app config\");\n      }\n      return this.config_success(config);\n    } catch (e) {\n      console.error(e);\n      if (space_id) {\n        check_space_status(\n          space_id,\n          RE_SPACE_NAME.test(space_id) ? \"space_name\" : \"subdomain\",\n          this.handle_space_success\n        );\n      } else {\n        if (status_callback)\n          status_callback({\n            status: \"error\",\n            message: \"Could not load this space.\",\n            load_status: \"error\",\n            detail: \"NOT_FOUND\"\n          });\n      }\n    }\n  }\n  async config_success(_config) {\n    this.config = _config;\n    if (typeof window !== \"undefined\") {\n      if (window.location.protocol === \"https:\") {\n        this.config.root = this.config.root.replace(\"http://\", \"https://\");\n      }\n    }\n    if (this.config.auth_required) {\n      return this.prepare_return_obj();\n    }\n    try {\n      this.api_info = await this.view_api();\n    } catch (e) {\n      console.error(`Could not get API details: ${e.message}`);\n    }\n    return this.prepare_return_obj();\n  }\n  async handle_space_success(status) {\n    const { status_callback } = this.options;\n    if (status_callback)\n      status_callback(status);\n    if (status.status === \"running\") {\n      try {\n        this.config = await this._resolve_config();\n        if (!this.config) {\n          throw new Error(\"Could not resolve app config\");\n        }\n        const _config = await this.config_success(this.config);\n        return _config;\n      } catch (e) {\n        console.error(e);\n        if (status_callback) {\n          status_callback({\n            status: \"error\",\n            message: \"Could not load this space.\",\n            load_status: \"error\",\n            detail: \"NOT_FOUND\"\n          });\n        }\n      }\n    }\n  }\n  async component_server(component_id, fn_name, data) {\n    var _a;\n    if (!this.config) {\n      throw new Error(\"Could not resolve app config\");\n    }\n    const headers = {};\n    const { hf_token } = this.options;\n    const { session_hash } = this;\n    if (hf_token) {\n      headers.Authorization = `Bearer ${this.options.hf_token}`;\n    }\n    let root_url;\n    let component = this.config.components.find(\n      (comp) => comp.id === component_id\n    );\n    if ((_a = component == null ? void 0 : component.props) == null ? void 0 : _a.root_url) {\n      root_url = component.props.root_url;\n    } else {\n      root_url = this.config.root;\n    }\n    let body;\n    if (\"binary\" in data) {\n      body = new FormData();\n      for (const key in data.data) {\n        if (key === \"binary\")\n          continue;\n        body.append(key, data.data[key]);\n      }\n      body.set(\"component_id\", component_id.toString());\n      body.set(\"fn_name\", fn_name);\n      body.set(\"session_hash\", session_hash);\n    } else {\n      body = JSON.stringify({\n        data,\n        component_id,\n        fn_name,\n        session_hash\n      });\n      headers[\"Content-Type\"] = \"application/json\";\n    }\n    if (hf_token) {\n      headers.Authorization = `Bearer ${hf_token}`;\n    }\n    try {\n      const response = await this.fetch_implementation(\n        `${root_url}/component_server/`,\n        {\n          method: \"POST\",\n          body,\n          headers\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\n          \"Could not connect to component server: \" + response.statusText\n        );\n      }\n      const output = await response.json();\n      return output;\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  prepare_return_obj() {\n    return {\n      config: this.config,\n      predict: this.predict,\n      submit: this.submit,\n      view_api: this.view_api,\n      component_server: this.component_server\n    };\n  }\n}\nasync function client(app_reference, options = {}) {\n  return await Client.connect(app_reference, options);\n}\nexport {\n  Client,\n  FileData,\n  client,\n  duplicate,\n  predict,\n  prepare_files,\n  submit,\n  upload,\n  upload_files\n};\n"],
  "mappings": "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",
  "names": []
}
